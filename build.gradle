plugins {
    id 'java-library'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
}

group 'uk.intenso.hwan'
version '0.1.1'


tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': 'Hwan',
                'Implementation-Version': project.version)
    }
}


sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

repositories {
    mavenCentral()
}


dependencies {
    api 'org.slf4j:slf4j-simple:2.0.3'
    api 'com.google.code.gson:gson:2.10'
    api 'org.apache.httpcomponents:httpclient:4.5.14'

    api 'commons-io:commons-io:2.11.0'
    api 'org.yaml:snakeyaml:2.0'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.mockito:mockito-core:5.1.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'


    integrationTestImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    integrationTestImplementation 'org.assertj:assertj-core:3.23.1'
    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'


}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

test {
    useJUnitPlatform()
}

//compileJava {
//    jvmTarget = "17"
//}
//
compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}